{"version":3,"sources":["pages/Login.jsx","assets/images/logo.jpg","components/SliderMenu.jsx","pages/Home.jsx","router/Route.jsx","App.js","reportWebVitals.js","index.js"],"names":["Login","onFinish","username","password","openNotificationWithIcon","props","history","push","type","t","c","notification","message","duration","description","className","params","particles","line_linked","shadow","enable","color","blur","opacity","number","value","density","value_area","shape","stroke","width","polygon","nb_sides","random","anim","speed","opacity_min","sync","size","size_min","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","modes","grab","distance","bubble","repulse","particles_nb","remove","retina_detect","name","initialValues","remember","this","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","valuePropName","noStyle","htmlType","Component","Sider","Layout","SliderMenu","state","collapsed","menuList","label","id","onCollapse","setState","collapsible","src","logo","alt","theme","defaultSelectedKeys","map","item","React","Header","Content","CheckableTag","Tag","Home","progress","setProgress","setInterval","style","minHeight","height","onLoaderFinished","bind","padding","margin","Router","path","component","exact","to","App","Route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.425b373b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./login.scss\";\nimport Particles from \"react-particles-js\";\nimport { Form, Input, Button, Checkbox, notification } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nclass Login extends Component {\n    onFinish =({ username,password })=> {\n        if(username === 'admin' && password === '111') {\n            this.openNotificationWithIcon('success','登录成功！','用户登录成功！')\n            this.props.history.push('/home')\n        }else {\n            this.openNotificationWithIcon('error','登录错误！','用户名或密码不正确！')\n        }\n    }\n    openNotificationWithIcon = (type,t,c) => {\n        notification[type]({\n            message: t ? t : '提示',\n            duration: 1,\n            description: c ? c : '未知信息！',\n        })\n    }\n    render() {\n        return (\n            <div className=\"loginwrap\">\n                <Particles\n                    params={\n                        {\n                            particles: {\n                            line_linked: {\n                                shadow: {\n                                    enable: true,\n                                    color: \"#fff\",\n                                    blur: 15,\n                                    opacity: 0.5,\n                                },\n                            },\n                            number: {\n                                value: 60,\n                                density: {\n                                    enable: true,\n                                    value_area: 1500,\n                                },\n                            },\n                            color: {\n                                value: \"#ccc\",\n                            },\n                            shape: {\n                                type: \"circle\",\n                                stroke: {\n                                    width: 0,\n                                    color: \"#000000\",\n                                },\n                                polygon: {\n                                    nb_sides: 5,\n                                },\n                            },\n                            opacity: {\n                                value: 1,\n                                random: true,\n                                anim: {\n                                    enable: true,\n                                    speed: 1,\n                                    opacity_min: 1,\n                                    sync: false,\n                                },\n                            },\n                            size: {\n                                value: 4,\n                                random: true,\n                                anim: {\n                                    enable: false,\n                                    speed: 20,\n                                    size_min: 0.1,\n                                    sync: false,\n                                },\n                            },\n                            move: {\n                                enable: true,\n                                speed: 3,\n                                direction: \"none\",\n                                random: true,\n                                straight: false,\n                                out_mode: \"out\",\n                                bounce: false,\n                                attract: {\n                                    enable: false,\n                                    rotateX: 600,\n                                    rotateY: 1200,\n                                },\n                            },\n                        },\n                        interactivity: {\n                            detect_on: \"canvas\",\n                            events: {\n                                onhover: {\n                                    enable: true,\n                                    mode: \"repulse\",\n                                },\n                            },\n                            modes: {\n                                grab: {\n                                    distance: 50,\n                                    line_linked: {\n                                        opacity: 1,\n                                    },\n                                },\n                                bubble: {\n                                    distance: 100,\n                                    size: 80,\n                                    duration: 2,\n                                    opacity: 0.8,\n                                    speed: 3,\n                                },\n                                repulse: {\n                                    distance: 100,\n                                    duration: 0.4,\n                                },\n                                push: {\n                                    particles_nb: 4,\n                                },\n                                remove: {\n                                    particles_nb: 2,\n                                },\n                            },\n                        },\n                        retina_detect: true,\n                    }}\n                />\n                <div className=\"loginform\">\n                    <div className=\"login_left\">管理系统</div>\n                    <div className=\"login_right\">\n                        <h1>用户登录</h1>\n                        <div className=\"form\">\n                        <Form\n                            name=\"normal_login\"\n                            className=\"login-form\"\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onFinish={ this.onFinish }\n                        >\n                            <Form.Item\n                                name=\"username\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '请输入用户名!',\n                                    },\n                                ]}\n                            >\n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"password\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '请输入密码!',\n                                    },\n                                ]}\n                            >\n                                <Input\n                                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                    type=\"password\"\n                                    placeholder=\"密码\"\n                                />\n                            </Form.Item>\n                            <Form.Item>\n                                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                                    <Checkbox>记住密码</Checkbox>\n                                </Form.Item>\n                            </Form.Item>\n\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                    登 录\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/logo.f9907492.jpg\";","import React from 'react';\nimport { Layout, Menu } from \"antd\";\nimport logo from '_assets/images/logo.jpg'\nimport './style/slidermenu.scss'\nconst { Sider } = Layout;\n\nclass SliderMenu extends React.Component {\n    state = {\n        collapsed: false,\n        menuList: [\n            {\n                label: '11111',\n                id: 1\n            },\n            {\n                label: '22222',\n                id: 2\n            },\n            {\n                label: '33333',\n                id: 3\n            },\n            {\n                label: '44444',\n                id: 4\n            }\n        ]\n    }\n    onCollapse = (collapsed) => {\n        this.setState({ collapsed });\n    }\n    render() {\n        const { collapsed } = this.state;\n        return (\n            <Sider collapsible collapsed={ collapsed } onCollapse={this.onCollapse}>\n                <div className=\"title\">\n                    <img src={ logo } alt=\"\"/>\n                    { !collapsed ? '管理平台' : null }\n                </div>\n\n                <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n                    {\n                        this.state.menuList.map(item=> {\n                            return (\n                                <Menu.Item key={item.id}>{item.label}</Menu.Item>\n                            )\n                        })\n                    }\n                </Menu>\n            </Sider>\n        );\n    }\n}\n\nexport default SliderMenu","import React from \"react\"\nimport { Layout, Breadcrumb, Tag } from \"antd\";\nimport './home.scss'\nimport SliderMenu from \"_g/SliderMenu\"\nimport LoadingBar from 'react-top-loading-bar'\n\nconst { Header, Content } = Layout;\nconst { CheckableTag } = Tag;\n\n\nclass Home extends React.Component {\n    state = {\n        progress: 0\n    }\n    setProgress = ()=> {\n        setInterval(()=> {\n            if(this.state.progress <= 100) {\n                this.setState({\n                    progress: this.state.progress + 5\n                })\n            }\n        },600)\n    }\n    render() {\n        return (\n        <Layout style={{ minHeight: \"100vh\" }}>\n            <SliderMenu></SliderMenu>\n            <Layout className=\"site-layout\">\n                <LoadingBar\n                    color='#000'\n                    height= \"4px\"\n                    progress={ this.state.progress }\n                    onLoaderFinished={ this.setProgress.bind(this)() }\n                />\n                <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n                <Content style={{ margin: \"0 16px\" }}>\n                    <Breadcrumb style={{ margin: \"16px 0\" }}>\n                        <Breadcrumb.Item>首页</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <CheckableTag key=\"1\">首页</CheckableTag>\n                    <div\n                        className=\"site-layout-background\"\n                        style={{ padding: 24, minHeight: 360 }}\n                    >\n                        Bill is a cat.\n                    </div>\n                </Content>\n            </Layout>\n        </Layout>\n        );\n    }\n}\n\nexport default Home\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\"\n\nimport Login from \"_pages/Login\"\nimport Home from \"_pages/Home\"\n\nclass Router extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" component={ Home } exact></Route>\n                    <Route path=\"/login\" component={ Login }></Route>\n                    <Redirect path=\"/home\" to=\"/\"></Redirect>\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default Router;","import './App.css';\nimport Router from \"_router/Route\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router></Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}